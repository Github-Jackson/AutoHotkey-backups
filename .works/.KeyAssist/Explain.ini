
;按键列表 https://wyagd001.github.io/zh-cn/docs/KeyList.htm
;fileName.ini
;fileName决定该ini配置的所有按键映射生效的前提条件
;fileName为逻辑表达式
;可解释的符号列表:
;逻辑与:& 逻辑或:| 逻辑非:_ 括号:()
;KeyName: 见顶部按键列表页面
;默认情况下, 验证fileName的逻辑结果的时候, 取key的逻辑状态, 按下为true,松开为flase
;若key前带有@, 如@Capslock 则取Capslock的切换状态, Capslock指示灯亮起为true
;任何键都具有切换状态

;Section: 使用ini配置文件规则
[@Section]
;Section无明显意义, 若带有@,&修饰符,则该Section块具有持续映射功能
;&:激活全局同名文件内的持续映射
;@:激活该ini文件内的持续映射
;持续映射:Action 仅对fileName中只有单个key的配置生效 可包含修饰键(!^+#)
;当fileName中声明的键抬起时, 任何带有修饰符的Section块中的键处于按下状态
;那么该Section块被持续映射,
;即不需要fileName的逻辑结果为true,该Section块的映射也可生效
T=Test
;如以上映射T=Test,假设该ini配置的文件名为Capslock
;原需要Capslock+T才可输出Test
;在Action(持续映射)激活的情况下,直接按T即可输出Test

[@Control]
*I={Blind}{Up}
*K={Blind}{Down}
*J={Blind}{Left}
*L={Blind}{Right}
;以上Control映射块
;第一个=左边为原Key 右边为映射内容(输出内容),
;输出语法见顶部按键列表,单个字符可描述的key无需用{}包裹.
;{Blind}盲从模式:该模式必须声明在输出的最前面
;盲从模式: 如果在发送开始时Alt/Ctrl/Shift/Win 为按下状态,则不松开这些按键
;例如按下I键时,Shift键处于按下状态, 那么输出Shift+Up

;[~*!$^%#]
;Section修饰符
;~:按键穿透, 该Section中的热键不影响其原意义
;*:盲从模式, 该Section中的热键即使有修饰键修饰也会触发, 且输出内容会被修饰键修饰
;!:发送模式:SendPlay 不推荐使用
;$:发送模式:SendEvent 将输出的内容作为按键事件发送
;^:发送模式:SendInput 将输出的内容作为SendInput模式发送
;%:原始模式:指输出内容不被转义
;#:文本模式:输出内容不会被转义, 同上

[根据文件夹限定生效窗体]
;@Path#Name$